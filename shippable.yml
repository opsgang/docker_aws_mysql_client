# vim: et sr sw=2 ts=2 smartindent:
language: none

services:
  - mysql

env:
  global:
    - IMG="aws_mysql_client"
    - STABLE_TAG="stable"
    - JQ="https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64"
    - DB_HOST=localhost
    - DB_USER=t
    - DB_PASS="Pword666"
    - SHIPPABLE_MYSQL_CMD="/usr/bin/mysqld_safe --bind-address=0.0.0.0"

build:

  ci:
    - mysql -e "CREATE USER t@'%' IDENTIFIED BY 'Pword666';" ;
    - mysql -e "CREATE USER t@'localhost' IDENTIFIED BY 'Pword666';" ;
      mysql -e "GRANT ALL ON *.* TO t@'%'; FLUSH PRIVILEGES;" ;
      mysql -e "GRANT ALL ON *.* TO t@'localhost'; FLUSH PRIVILEGES;" ;
      mysql -e "CREATE DATABASE example;"
    - curl -O -L $JQ
      && chmod +x jq-linux64
      && sudo mv jq-linux64 /usr/bin/jq
    - docker pull opsgang/$IMG:$STABLE_TAG || true # speed up build layers
    - bash ./build.sh # avoid aufs file-locking with new shell
    - bash ./t/run.sh # tests

  on_success:
    - if [[ "$IS_GIT_TAG" == "true" ]] || [[ "$IS_RELEASE" == "true" ]]; then
        a=$(docker inspect opsgang/$IMG:candidate | jq -r '.[].Config.Labels') ;
        v=$(echo $a | jq -r '.version') ;
        gt=$(echo $a | jq -r '."opsgang.build_git_tag"') ;
        tags="$v $gt $STABLE_TAG" ; echo $a | jq . ; echo "docker tags:($tags)" ;
        for t in $tags; do
          docker tag opsgang/$IMG:candidate opsgang/$IMG:$t;
          docker push opsgang/$IMG:$t;
          echo "... pushed $IMG:$t";
        done ;
      fi

integrations:
  hub:
    - integrationName: opsgang_dockerhubreg
      type: dockerRegistryLogin

  notifications:
    - integrationName: opsgang_slack_delivery
      type: slack
      recipients: "#delivery"
      on_success: always
      on_failure: always
      on_pull_request: never

